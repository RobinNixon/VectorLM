[
  {
    "primitive": "ψ:if",
    "shortform": "ψ:if",
    "type": "logic",
    "definition": "tests(condition); branches(path)",
    "function": "Performs conditional branching based on a symbolic test."
  },
  {
    "primitive": "ψ:then",
    "shortform": "ψ:th",
    "type": "logic",
    "definition": "follows(condition); enacts(result)",
    "function": "Follows from a true condition."
  },
  {
    "primitive": "ψ:else",
    "shortform": "ψ:el",
    "type": "logic",
    "definition": "replaces(branch); proposes(alternative)",
    "function": "Provides an alternative if condition fails."
  },
  {
    "primitive": "ψ:because",
    "shortform": "ψ:bc",
    "type": "logic",
    "definition": "links(effect, cause); affirms(reason)",
    "function": "Gives reason or justification for a condition."
  },
  {
    "primitive": "ψ:not",
    "shortform": "ψ:nt",
    "type": "logic",
    "definition": "negates(state); blocks(path)",
    "function": "Denies or blocks a symbolic state or path."
  },
  {
    "primitive": "ψ:maybe",
    "shortform": "ψ:mb",
    "type": "possible",
    "definition": "floats(possibility); delays(commitment)",
    "function": "Suspends final decision or opens uncertainty."
  },
  {
    "primitive": "ψ:assume",
    "shortform": "ψ:as",
    "type": "possible",
    "definition": "accepts(hypothesis); enables(exploration)",
    "function": "Temporarily accepts a hypothesis."
  },
  {
    "primitive": "ψ:reject",
    "shortform": "ψ:rj",
    "type": "logic",
    "definition": "blocks(path); denies(validity)",
    "function": "Rejects a reasoning path or option."
  },
  {
    "primitive": "ψ:verify",
    "shortform": "ψ:vf",
    "type": "logic",
    "definition": "tests(claim); outputs(truth)",
    "function": "Checks validity of a symbolic claim."
  },
  {
    "primitive": "ψ:truth",
    "shortform": "ψ:tr",
    "type": "logic",
    "definition": "affirms(reality); supports(claim)",
    "function": "Affirms truth of a claim or conclusion."
  },
  {
    "primitive": "ψ:false",
    "shortform": "ψ:fl",
    "type": "logic",
    "definition": "denies(reality); invalidates(reasoning)",
    "function": "Declares a state or claim as false."
  },
  {
    "primitive": "ψ:paradox",
    "shortform": "ψ:px",
    "type": "logic",
    "definition": "binds(truth, falsehood); suspends(commitment)",
    "function": "Represents suspended contradiction."
  },
  {
    "primitive": "ψ:goal",
    "shortform": "ψ:gl",
    "type": "goal",
    "definition": "defines(target); directs(step)",
    "function": "Sets a symbolic objective."
  },
  {
    "primitive": "ψ:step",
    "shortform": "ψ:st",
    "type": "action",
    "definition": "performs(action); advances(goal)",
    "function": "Executes one part of a plan."
  },
  {
    "primitive": "ψ:revert",
    "shortform": "ψ:rv",
    "type": "logic",
    "definition": "undoes(step); enables(reflection)",
    "function": "Rolls back a prior symbolic move."
  },
  {
    "primitive": "ψ:choose",
    "shortform": "ψ:ch",
    "type": "decision",
    "definition": "picks(option); commits(path)",
    "function": "Commits to a reasoning path."
  },
  {
    "primitive": "ψ:which",
    "shortform": "ψ:wh",
    "type": "logic",
    "definition": "compares(options); informs(choose)",
    "function": "Supports choice by evaluating options."
  },
  {
    "primitive": "ψ:rule",
    "shortform": "ψ:rl",
    "type": "logic",
    "definition": "constrains(path); enforces(structure)",
    "function": "Applies a structural constraint."
  },
  {
    "primitive": "ψ:fail",
    "shortform": "ψ:fa",
    "type": "logic",
    "definition": "blocks(goal); ends(path)",
    "function": "Terminates a symbolic plan on failure."
  },
  {
    "primitive": "ψ:pleasure",
    "shortform": "ψ:pl",
    "type": "emotion",
    "definition": "affirms(state); attracts(agent)",
    "function": "Symbolises positive reinforcement."
  },
  {
    "primitive": "ψ:pain",
    "shortform": "ψ:pn",
    "type": "emotion",
    "definition": "negates(state); repels(agent)",
    "function": "Symbolises negative reinforcement."
  },
  {
    "primitive": "ψ:fear",
    "shortform": "ψ:fr",
    "type": "emotion",
    "definition": "anticipates(pain); blocks(action)",
    "function": "Projects avoidance."
  },
  {
    "primitive": "ψ:hope",
    "shortform": "ψ:hp",
    "type": "emotion",
    "definition": "anticipates(pleasure); drives(goal)",
    "function": "Motivates pursuit."
  },
  {
    "primitive": "ψ:curiosity",
    "shortform": "ψ:cu",
    "type": "emotion",
    "definition": "targets(unknown); seeks(question)",
    "function": "Drives exploration."
  },
  {
    "primitive": "ψ:desire",
    "shortform": "ψ:ds",
    "type": "emotion",
    "definition": "links(pleasure, target); pulls(choose)",
    "function": "Connects value to action."
  },
  {
    "primitive": "ψ:regret",
    "shortform": "ψ:rg",
    "type": "emotion",
    "definition": "links(pain, past_choice); discourages(repeat)",
    "function": "Inhibits repetition based on past pain."
  },
  {
    "primitive": "ψ:avoid",
    "shortform": "ψ:av",
    "type": "emotion",
    "definition": "links(pain, cause); repels(path)",
    "function": "Symbolises risk aversion."
  },
  {
    "primitive": "ψ:recurse",
    "shortform": "ψ:rcs",
    "type": "recursive",
    "definition": "re-applies(pattern); enables(nested_reasoning)",
    "function": "Allows nested inference."
  },
  {
    "primitive": "ψ:compute",
    "shortform": "ψ:cp",
    "type": "logic",
    "definition": "instructs(model); simulates(procedure)",
    "function": "Delegates symbolic operation."
  },
  {
    "primitive": "ψ:self",
    "shortform": "ψ:sl",
    "type": "introspection",
    "definition": "references(self); enables(introspection)",
    "function": "Symbolic reference to self."
  },
  {
    "primitive": "ψ:recall",
    "shortform": "ψ:rc",
    "type": "memory",
    "definition": "recalls(info); supports(chain)",
    "function": "Brings symbolic memory into scope."
  },
  {
    "primitive": "ψ:trace",
    "shortform": "ψ:trc",
    "type": "memory",
    "definition": "follows(path); reveals(history)",
    "function": "Reconstructs symbolic history."
  },
  {
    "primitive": "ψ:observe",
    "shortform": "ψ:ob",
    "type": "percept",
    "definition": "notes(state); updates(knowledge)",
    "function": "Stores perceptual or symbolic input."
  },
  {
    "primitive": "ψ:and",
    "shortform": "ψ:an",
    "type": "logic",
    "definition": "binds(conditions); requires(all true)",
    "function": "Requires conjunction."
  },
  {
    "primitive": "ψ:or",
    "shortform": "ψ:or",
    "type": "logic",
    "definition": "joins(paths); allows(any true)",
    "function": "Allows one of several options."
  },
  {
    "primitive": "ψ:xor",
    "shortform": "ψ:xr",
    "type": "logic",
    "definition": "contrasts(paths); allows(one true)",
    "function": "Exclusive or operator."
  },
  {
    "primitive": "ψ:implies",
    "shortform": "ψ:imp",
    "type": "logic",
    "definition": "links(p, q); affirms(p → q)",
    "function": "Symbolic implication."
  },
  {
    "primitive": "ψ:iff",
    "shortform": "ψ:iff",
    "type": "logic",
    "definition": "equates(p, q); affirms(bi–implication)",
    "function": "Logical equivalence (iff)."
  },
  {
    "primitive": "ψ:guess",
    "shortform": "ψ:gs",
    "type": "possible",
    "definition": "proposes(explanation); lacks(proof)",
    "function": "Suggests unproven reasoning."
  },
  {
    "primitive": "ψ:what_if",
    "shortform": "ψ:wf",
    "type": "possible",
    "definition": "alters(condition); simulates(outcome)",
    "function": "Models hypothetical outcome."
  },
  {
    "primitive": "ψ:project",
    "shortform": "ψ:pj",
    "type": "possible",
    "definition": "simulates(future); explores(possibility)",
    "function": "Projects forward state."
  },
  {
    "primitive": "ψ:analogy",
    "shortform": "ψ:ag",
    "type": "analogy",
    "definition": "maps(structure₁, structure₂); enables(transfer)",
    "function": "Transfers structure between domains."
  },
  {
    "primitive": "ψ:generalise",
    "shortform": "ψ:gn",
    "type": "logic",
    "definition": "abstracts(examples); infers(rule)",
    "function": "Derives symbolic general from cases."
  },
  {
    "primitive": "ψ:fit",
    "shortform": "ψ:ft",
    "type": "logic",
    "definition": "matches(hypothesis, data); selects(best_explains)",
    "function": "Matches model to facts."
  },
  {
    "primitive": "ψ:pattern",
    "shortform": "ψ:pt",
    "type": "logic",
    "definition": "detects(repetition); suggests(rule)",
    "function": "Extracts symbolic rule from recurrence."
  },
  {
    "primitive": "ψ:sequence",
    "shortform": "ψ:seq",
    "type": "time",
    "definition": "orders(events); establishes(sequence)",
    "function": "Defines a temporal order of symbolic events."
  },
  {
    "primitive": "ψ:before",
    "shortform": "ψ:bef",
    "type": "time",
    "definition": "places(x, before_y); affirms(precedence)",
    "function": "Declares x occurs before y."
  },
  {
    "primitive": "ψ:after",
    "shortform": "ψ:aft",
    "type": "time",
    "definition": "places(x, after_y); affirms(succession)",
    "function": "Declares x occurs after y."
  },
  {
    "primitive": "ψ:duration",
    "shortform": "ψ:dur",
    "type": "time",
    "definition": "measures(duration); quantifies(time_span)",
    "function": "Calculates or assigns duration."
  },
  {
    "primitive": "ψ:simultaneous",
    "shortform": "ψ:sim",
    "type": "time",
    "definition": "aligns(events); affirms(simultaneity)",
    "function": "Symbolises co-occurring events."
  },
  {
    "primitive": "ψ:cause",
    "shortform": "ψ:cs",
    "type": "causal",
    "definition": "links(x, y); affirms(x_produces_y)",
    "function": "Declares causal relation between x and y."
  },
  {
    "primitive": "ψ:enable",
    "shortform": "ψ:en",
    "type": "causal",
    "definition": "links(x, y); affirms(x_permits_y)",
    "function": "Shows enabling condition."
  },
  {
    "primitive": "ψ:block",
    "shortform": "ψ:bl",
    "type": "causal",
    "definition": "links(x, y); affirms(x_prevents_y)",
    "function": "Shows preventing relation."
  },
  {
    "primitive": "ψ:necessary",
    "shortform": "ψ:nc",
    "type": "causal",
    "definition": "tests(necessity); affirms(required_condition)",
    "function": "Tests if condition is necessary."
  },
  {
    "primitive": "ψ:sufficient",
    "shortform": "ψ:sf",
    "type": "causal",
    "definition": "tests(sufficiency); affirms(adequate_condition)",
    "function": "Tests if condition is enough."
  },
  {
    "primitive": "ψ:must",
    "shortform": "ψ:ms",
    "type": "modal",
    "definition": "affirms(necessity); blocks(alternatives)",
    "function": "Declares something required."
  },
  {
    "primitive": "ψ:cannot",
    "shortform": "ψ:cn",
    "type": "modal",
    "definition": "denies(possibility); enforces(impossibility)",
    "function": "Prohibits an outcome."
  },
  {
    "primitive": "ψ:might",
    "shortform": "ψ:mi",
    "type": "modal",
    "definition": "weakens(maybe); expresses(low_probability)",
    "function": "Soft suggestion or potentiality."
  },
  {
    "primitive": "ψ:believes",
    "shortform": "ψ:blv",
    "type": "social",
    "definition": "models(other_mind); tracks(belief_state)",
    "function": "Represents beliefs of other agent."
  },
  {
    "primitive": "ψ:intends",
    "shortform": "ψ:int",
    "type": "social",
    "definition": "models(intention); predicts(behavior)",
    "function": "Models symbolic intention."
  },
  {
    "primitive": "ψ:perspective",
    "shortform": "ψ:pv",
    "type": "social",
    "definition": "shifts(viewpoint); enables(empathy)",
    "function": "Temporarily adopts another perspective."
  },
  {
    "primitive": "ψ:other",
    "shortform": "ψ:ot",
    "type": "social",
    "definition": "references(other); frames(contrast)",
    "function": "Symbolic non-self agent."
  },
  {
    "primitive": "ψ:synthesis",
    "shortform": "ψ:sy",
    "type": "integration",
    "definition": "merges(opposites); transcends(contradiction)",
    "function": "Resolves symbolic contradictions."
  },
  {
    "primitive": "ψ:integrate",
    "shortform": "ψ:ig",
    "type": "integration",
    "definition": "combines(perspectives); creates(unity)",
    "function": "Unifies multiple inputs into one."
  },
  {
    "primitive": "ψ:transcend",
    "shortform": "ψ:trn",
    "type": "integration",
    "definition": "rises_above(conflict); finds(higher_order_solution)",
    "function": "Finds meta-level resolution."
  },
  {
    "primitive": "ψ:see",
    "shortform": "ψ:sv",
    "type": "percept",
    "definition": "detects(visual); updates(observe)",
    "function": "Visual sensory update."
  },
  {
    "primitive": "ψ:hear",
    "shortform": "ψ:hr",
    "type": "percept",
    "definition": "detects(audio); updates(observe)",
    "function": "Auditory input."
  },
  {
    "primitive": "ψ:touch",
    "shortform": "ψ:tc",
    "type": "percept",
    "definition": "detects(contact); affirms(pleasure or pain)",
    "function": "Physical sensation."
  },
  {
    "primitive": "ψ:smell",
    "shortform": "ψ:sm",
    "type": "percept",
    "definition": "detects(chemical); triggers(recall)",
    "function": "Olfactory perception."
  },
  {
    "primitive": "ψ:taste",
    "shortform": "ψ:ts",
    "type": "percept",
    "definition": "detects(flavour); modulates(preference)",
    "function": "Gustatory input."
  },
  {
    "primitive": "ψ:fuzzy",
    "shortform": "ψ:fz",
    "type": "modulate",
    "definition": "links(x, y); affirms(approximate_match)",
    "function": "Symbolises imprecise connection."
  },
  {
    "primitive": "ψ:similarity",
    "shortform": "ψ:sm",
    "type": "modulate",
    "definition": "measures(similarity); outputs(score)",
    "function": "Evaluates similarity."
  },
  {
    "primitive": "ψ:alternate",
    "shortform": "ψ:al",
    "type": "modulate",
    "definition": "proposes(substitute); requires(fuzzy)",
    "function": "Proposes substitution under fuzziness."
  },
  {
    "primitive": "ψ:resonate",
    "shortform": "ψ:rsn",
    "type": "modulate",
    "definition": "aligns(concepts); amplifies(coherence)",
    "function": "Strengthens conceptual alignment."
  },
  {
    "primitive": "ψ:certainty",
    "shortform": "ψ:ct",
    "type": "modulate",
    "definition": "expresses(confidence); modulates(assertion)",
    "function": "Modulates belief strength."
  },
  {
    "primitive": "ψ:spike",
    "shortform": "ψ:sk",
    "type": "modulate",
    "definition": "amplifies(signal); boosts(weight)",
    "function": "Symbolic emotional/intellectual spike."
  },
  {
    "primitive": "ψ:equal",
    "shortform": "ψ:eq",
    "type": "equal",
    "definition": "compares(x, y); affirms(equality)",
    "function": "Confirms symbolic equality."
  },
  {
    "primitive": "ψ:not_equal",
    "shortform": "ψ:ne",
    "type": "equal",
    "definition": "compares(x, y); denies(equality)",
    "function": "Denies symbolic equality."
  },
  {
    "primitive": "ψ:greater",
    "shortform": "ψ:gt",
    "type": "logic",
    "definition": "compares(x, y); affirms(x > y)",
    "function": "Greater-than relation."
  },
  {
    "primitive": "ψ:less",
    "shortform": "ψ:lt",
    "type": "logic",
    "definition": "compares(x, y); affirms(x < y)",
    "function": "Less-than relation."
  },
  {
    "primitive": "ψ:greater_equal",
    "shortform": "ψ:ge",
    "type": "logic",
    "definition": "compares(x, y); affirms(x ≥ y)",
    "function": "Greater-or-equal relation."
  },
  {
    "primitive": "ψ:less_equal",
    "shortform": "ψ:le",
    "type": "logic",
    "definition": "compares(x, y); affirms(x ≤ y)",
    "function": "Less-or-equal relation."
  },
  {
    "primitive": "ψ:in",
    "shortform": "ψ:in",
    "type": "logic",
    "definition": "tests(x ∈ set); affirms(membership)",
    "function": "Tests set membership."
  },
  {
    "primitive": "ψ:out",
    "shortform": "ψ:ou",
    "type": "logic",
    "definition": "tests(x ∉ set); denies(membership)",
    "function": "Tests for non-membership."
  },
  {
    "primitive": "ψ:subset",
    "shortform": "ψ:ss",
    "type": "logic",
    "definition": "asserts(x ⊂ y); implies(hierarchy)",
    "function": "Subset relation."
  },
  {
    "primitive": "ψ:superset",
    "shortform": "ψ:sp",
    "type": "logic",
    "definition": "asserts(x ⊃ y); implies(scope)",
    "function": "Superset relation."
  },
  {
    "primitive": "⊗(A → B)",
    "shortform": "⊗",
    "type": "orthogonality",
    "definition": "Switches active reasoning mode from A to B",
    "function": "Rotates reasoning dimension."
  },
  {
    "primitive": "π(A, B)",
    "shortform": "π",
    "type": "orthogonality",
    "definition": "Swaps priority of dimensions A and B",
    "function": "Reorders dominant reasoning axis."
  },
  {
    "primitive": "↑(D)",
    "shortform": "↑",
    "type": "orthogonality",
    "definition": "Elevates reasoning onto a more abstract/meta level of D",
    "function": "Moves reasoning to higher level."
  },
  {
    "primitive": "↓(D)",
    "shortform": "↓",
    "type": "orthogonality",
    "definition": "Lowers reasoning from abstract level of D to specifics",
    "function": "Grounds abstract mode."
  },
  {
    "primitive": "↺",
    "shortform": "↺",
    "type": "orthogonality",
    "definition": "Returns to the previously active reasoning state",
    "function": "Undo most recent mode switch."
  },
  {
    "primitive": "∥(A, B)",
    "shortform": "∥",
    "type": "orthogonality",
    "definition": "Activates simultaneous modes A and B",
    "function": "Blends dual dimensions."
  },
  {
    "primitive": "~>(A → B)",
    "shortform": "~>",
    "type": "orthogonality",
    "definition": "Models soft or gradual mode migration from A to B",
    "function": "Softly shifts reasoning type."
  },
  {
    "primitive": "⚓(D)",
    "shortform": "⚓",
    "type": "orthogonality",
    "definition": "Locks current reasoning in dimension D",
    "function": "Prevents unwanted mode switching."
  },
  {
    "primitive": "🔒(A)",
    "shortform": "🔒",
    "type": "orthogonality",
    "definition": "Prevents any transition from dimension A",
    "function": "Hard lock on mode."
  },
  {
    "primitive": "≡(A – B)",
    "shortform": "≡",
    "type": "orthogonality",
    "definition": "Declares temporary symbolic equivalence between axes",
    "function": "Metaphor or analogy axis mapping."
  },
  {
    "primitive": "👻(D)",
    "shortform": "👻",
    "type": "orthogonality",
    "definition": "Projects ephemeral reasoning shadow in D",
    "function": "Runs counterfactual projection."
  }
]