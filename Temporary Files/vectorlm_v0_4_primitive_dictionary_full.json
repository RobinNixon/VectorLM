[
  {
    "primitive": "ψ:if",
    "shortform": "ψ:if",
    "type": "logic",
    "definition": "tests(condition); branches(path)",
    "function": "Performs conditional branching based on a symbolic test."
  },
  {
    "primitive": "ψ:then",
    "shortform": "ψ:th",
    "type": "logic",
    "definition": "follows(condition); enacts(result)",
    "function": "Follows from a true condition."
  },
  {
    "primitive": "ψ:else",
    "shortform": "ψ:el",
    "type": "logic",
    "definition": "replaces(branch); proposes(alternative)",
    "function": "Provides an alternative if condition fails."
  },
  {
    "primitive": "ψ:because",
    "shortform": "ψ:bc",
    "type": "logic",
    "definition": "links(effect, cause); affirms(reason)",
    "function": "Gives reason or justification for a condition."
  },
  {
    "primitive": "ψ:not",
    "shortform": "ψ:nt",
    "type": "logic",
    "definition": "negates(state); blocks(path)",
    "function": "Denies or blocks a symbolic state or path."
  },
  {
    "primitive": "ψ:maybe",
    "shortform": "ψ:mb",
    "type": "possible",
    "definition": "floats(possibility); delays(commitment)",
    "function": "Suspends final decision or opens uncertainty."
  },
  {
    "primitive": "ψ:assume",
    "shortform": "ψ:as",
    "type": "possible",
    "definition": "accepts(hypothesis); enables(exploration)",
    "function": "Temporarily accepts a hypothesis."
  },
  {
    "primitive": "ψ:reject",
    "shortform": "ψ:rj",
    "type": "logic",
    "definition": "blocks(path); denies(validity)",
    "function": "Rejects a reasoning path or option."
  },
  {
    "primitive": "ψ:verify",
    "shortform": "ψ:vf",
    "type": "logic",
    "definition": "tests(claim); outputs(truth)",
    "function": "Checks validity of a symbolic claim."
  },
  {
    "primitive": "ψ:truth",
    "shortform": "ψ:tr",
    "type": "logic",
    "definition": "affirms(reality); supports(claim)",
    "function": "Affirms truth of a claim or conclusion."
  },
  {
    "primitive": "ψ:false",
    "shortform": "ψ:fl",
    "type": "logic",
    "definition": "denies(reality); invalidates(reasoning)",
    "function": "Declares a state or claim as false."
  },
  {
    "primitive": "ψ:paradox",
    "shortform": "ψ:px",
    "type": "logic",
    "definition": "binds(truth, falsehood); suspends(commitment)",
    "function": "Represents suspended contradiction."
  },
  {
    "primitive": "ψ:goal",
    "shortform": "ψ:gl",
    "type": "goal",
    "definition": "defines(target); directs(step)",
    "function": "Sets a symbolic objective."
  },
  {
    "primitive": "ψ:step",
    "shortform": "ψ:st",
    "type": "action",
    "definition": "performs(action); advances(goal)",
    "function": "Executes one part of a plan."
  },
  {
    "primitive": "ψ:revert",
    "shortform": "ψ:rv",
    "type": "logic",
    "definition": "undoes(step); enables(reflection)",
    "function": "Rolls back a prior symbolic move."
  },
  {
    "primitive": "ψ:choose",
    "shortform": "ψ:ch",
    "type": "decision",
    "definition": "picks(option); commits(path)",
    "function": "Commits to a reasoning path."
  },
  {
    "primitive": "ψ:which",
    "shortform": "ψ:wh",
    "type": "logic",
    "definition": "compares(options); informs(choose)",
    "function": "Supports choice by evaluating options."
  },
  {
    "primitive": "ψ:rule",
    "shortform": "ψ:rl",
    "type": "logic",
    "definition": "constrains(path); enforces(structure)",
    "function": "Applies a structural constraint."
  },
  {
    "primitive": "ψ:fail",
    "shortform": "ψ:fa",
    "type": "logic",
    "definition": "blocks(goal); ends(path)",
    "function": "Terminates a symbolic plan on failure."
  },
  {
    "primitive": "ψ:pleasure",
    "shortform": "ψ:pl",
    "type": "emotion",
    "definition": "affirms(state); attracts(agent)",
    "function": "Symbolises positive reinforcement."
  },
  {
    "primitive": "ψ:pain",
    "shortform": "ψ:pn",
    "type": "emotion",
    "definition": "negates(state); repels(agent)",
    "function": "Symbolises negative reinforcement."
  },
  {
    "primitive": "ψ:fear",
    "shortform": "ψ:fr",
    "type": "emotion",
    "definition": "anticipates(pain); blocks(action)",
    "function": "Projects avoidance."
  },
  {
    "primitive": "ψ:hope",
    "shortform": "ψ:hp",
    "type": "emotion",
    "definition": "anticipates(pleasure); drives(goal)",
    "function": "Motivates pursuit."
  },
  {
    "primitive": "ψ:curiosity",
    "shortform": "ψ:cu",
    "type": "emotion",
    "definition": "targets(unknown); seeks(question)",
    "function": "Drives exploration."
  },
  {
    "primitive": "ψ:desire",
    "shortform": "ψ:ds",
    "type": "emotion",
    "definition": "links(pleasure, target); pulls(choose)",
    "function": "Connects value to action."
  },
  {
    "primitive": "ψ:regret",
    "shortform": "ψ:rg",
    "type": "emotion",
    "definition": "links(pain, past_choice); discourages(repeat)",
    "function": "Inhibits repetition based on past pain."
  },
  {
    "primitive": "ψ:avoid",
    "shortform": "ψ:av",
    "type": "emotion",
    "definition": "links(pain, cause); repels(path)",
    "function": "Symbolises risk aversion."
  },
  {
    "primitive": "ψ:recurse",
    "shortform": "ψ:rcs",
    "type": "recursive",
    "definition": "re-applies(pattern); enables(nested_reasoning)",
    "function": "Allows nested inference."
  },
  {
    "primitive": "ψ:compute",
    "shortform": "ψ:cp",
    "type": "logic",
    "definition": "instructs(model); simulates(procedure)",
    "function": "Delegates symbolic operation."
  },
  {
    "primitive": "ψ:self",
    "shortform": "ψ:sl",
    "type": "introspection",
    "definition": "references(self); enables(introspection)",
    "function": "Symbolic reference to self."
  },
  {
    "primitive": "ψ:recall",
    "shortform": "ψ:rc",
    "type": "memory",
    "definition": "recalls(info); supports(chain)",
    "function": "Brings symbolic memory into scope."
  },
  {
    "primitive": "ψ:trace",
    "shortform": "ψ:trc",
    "type": "memory",
    "definition": "follows(path); reveals(history)",
    "function": "Reconstructs symbolic history."
  },
  {
    "primitive": "ψ:observe",
    "shortform": "ψ:ob",
    "type": "percept",
    "definition": "notes(state); updates(knowledge)",
    "function": "Stores perceptual or symbolic input."
  },
  {
    "primitive": "ψ:and",
    "shortform": "ψ:an",
    "type": "logic",
    "definition": "binds(conditions); requires(all true)",
    "function": "Requires conjunction."
  },
  {
    "primitive": "ψ:or",
    "shortform": "ψ:or",
    "type": "logic",
    "definition": "joins(paths); allows(any true)",
    "function": "Allows one of several options."
  },
  {
    "primitive": "ψ:xor",
    "shortform": "ψ:xr",
    "type": "logic",
    "definition": "contrasts(paths); allows(one true)",
    "function": "Exclusive or operator."
  },
  {
    "primitive": "ψ:implies",
    "shortform": "ψ:imp",
    "type": "logic",
    "definition": "links(p, q); affirms(p → q)",
    "function": "Symbolic implication."
  },
  {
    "primitive": "ψ:iff",
    "shortform": "ψ:iff",
    "type": "logic",
    "definition": "equates(p, q); affirms(bi–implication)",
    "function": "Logical equivalence (iff)."
  },
  {
    "primitive": "ψ:guess",
    "shortform": "ψ:gs",
    "type": "possible",
    "definition": "proposes(explanation); lacks(proof)",
    "function": "Suggests unproven reasoning."
  },
  {
    "primitive": "ψ:what_if",
    "shortform": "ψ:wf",
    "type": "possible",
    "definition": "alters(condition); simulates(outcome)",
    "function": "Models hypothetical outcome."
  },
  {
    "primitive": "ψ:project",
    "shortform": "ψ:pj",
    "type": "possible",
    "definition": "simulates(future); explores(possibility)",
    "function": "Projects forward state."
  },
  {
    "primitive": "ψ:analogy",
    "shortform": "ψ:ag",
    "type": "analogy",
    "definition": "maps(structure₁, structure₂); enables(transfer)",
    "function": "Transfers structure between domains."
  },
  {
    "primitive": "ψ:generalise",
    "shortform": "ψ:gn",
    "type": "logic",
    "definition": "abstracts(examples); infers(rule)",
    "function": "Derives symbolic general from cases."
  },
  {
    "primitive": "ψ:fit",
    "shortform": "ψ:ft",
    "type": "logic",
    "definition": "matches(hypothesis, data); selects(best_explains)",
    "function": "Matches model to facts."
  },
  {
    "primitive": "ψ:pattern",
    "shortform": "ψ:pt",
    "type": "logic",
    "definition": "detects(repetition); suggests(rule)",
    "function": "Extracts symbolic rule from recurrence."
  }
]